{"version":3,"sources":["components/answer.js","components/viewport.js","numberButton.js","components/input.js","components/Header.js","App.js","serviceWorker.js","index.js"],"names":["Answer","props","answer","className","Viewport","outputArray","map","obj","nume","key","Math","random","feet","inches","denu","minusOutputArray","style","color","listStyle","NumberButton","onClick","handleClick","value","Input","id","footVal","onChange","handleFeet","autoFocus","handleInputChange","inchVal","handleInches","htmlFor","numeVal","handleChangeNume","denuVal","handleChangeDenu","onAdd","onSubtract","onEqual","onClear","Header","HeaderStyle","Component","background","calc","footArray","inchArray","minusInchArray","minusFootArray","footInchArray","minusFootInchArray","totalInchArray","minusTotalInchArray","numeArray","minusNumeArray","inputValType","footInputArray","inchInputArray","numeInputArray","denuInputArray","calculations","arr","length","reduce","a","b","floor","total","makeAnswer","x","y","z","App","state","footInputVal","inchInputVal","data","stateAnswer","numeInputVal","denuInputVal","fraction","numberInputType","handleChangeFeet","bind","handleChangeInches","handleClear","e","this","setState","inputvalue","target","inputValue","mixedNumber","push","forEach","num","Number","totalFeet","totalFeetInches","totalInches","minusMixedNumber","minusTotalFeet","minusTotalFeetInches","mixedNumberFinal","minusTotalInches","footInchObj","console","log","undefined","numeratorTotal","input","includes","inputType","String","footInputString","join","inputNum","inchInputString","numeInputString","denuInputString","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.75e41340.chunk.js","sourcesContent":["import React from 'react'\n\nconst Answer = (props) => {\n  const { answer } = props\n  if(answer){\n    return (\n      <div className=\"Answer\">\n        <h3>\n         \n         {`Answer = ${answer}`}\n         \n        \n        \n          </h3>\n        \n      </div>\n    )\n  }else{\n    return(\n      <div></div>\n    )\n  }\n    \n \n}\n\n\nexport default Answer\n","import React from 'react'\nimport Answer from './answer'\n\n\nexport const Viewport = (props) => {\n    \n    return (\n      <div className=\"viewport\" >\n       \n        <ul className=\"plus\">\n\n          {props.outputArray.map(obj=> {\n            if(obj.nume > 0){\n              return <li key={Math.random()*500}> + {obj.feet}'{obj.inches}\" {obj.nume} / {obj.denu}\n                </li>\n            }else{\n              return <li key={Math.random()*500}> + {obj.feet}'{obj.inches}\" \n              </li>\n            }\n    \n  })}\n        </ul>\n       <ul className=\"minus\">\n\n       {props.minusOutputArray.map(obj=> {\n         if(obj.nume > 0){\n          return <li key={Math.random()*500} style={{color: '#d63031', listStyle: 'none'}}> - {obj.feet}'{obj.inches}\" {obj.nume} / {obj.denu}</li>\n         }else{\n          return <li key={Math.random()*500} style={{color: '#d63031', listStyle: 'none'}}> - {obj.feet}'{obj.inches}\" </li>\n         }\n   \n  })}\n       </ul>\n      \n        <Answer answer={props.answer}/>\n     \n      \n      </div>\n\n    )\n  \n}\n\n\nexport default Viewport\n","import React from 'react'\n\n\nconst NumberButton = (props) => {\n  return (\n    <div className=\"number-button\">\n      <ul onClick={props.handleClick}>\n        <li className=\"number\" value=\"1\">1</li>\n        <li className=\"number\" value=\"2\">2</li>\n        <li className=\"number\" value=\"3\">3</li>\n        <li className=\"number\" value=\"4\">4</li>\n        <li className=\"number\" value=\"5\">5</li>\n        <li className=\"number\" value=\"6\">6</li>\n        <li className=\"number\" value=\"7\">7</li>\n        <li className=\"number\" value=\"8\">8</li>\n        <li className=\"number\" value=\"9\">9</li>\n        \n        <li className=\"number\" value=\"0\">0</li>\n        \n       \n        \n        \n      </ul>\n\n      \n    </div>\n  )\n}\n\nexport default NumberButton\n","import React from 'react';\nimport NumberButton from '../numberButton'\nimport './input.css'\n\n \n\n\n\nexport function Input(props){\n  \n \n  \n    return (\n      <div className=\"form-div\">\n\n        <form className=\"formStyle\">\n          <div className=\"inputFields\">\n\n       {/* input for feet */}\n            <label className=\"labelStyle\">Feet</label>\n            <input \n            id=\"feet\"\n            value={props.footVal} \n            className=\"inputVal\"\n              onChange={props.handleFeet} \n              autoFocus \n              onClick={props.handleInputChange}>\n            </input>\n\n      { /* input for inches */}\n            <label className=\"labelStyle\">inches</label>\n            <input\n                id=\"inches\"\n               value={props.inchVal}\n              onChange={props.handleInches}\n              className=\"inputVal\"\n              onClick={props.handleInputChange}>\n                \n\n            </input> \n            {// input for fractions\n            }\n            <label htmlFor=\"\" \n              className=\"labelStyle\">Fr</label>\n            <input \n             id=\"numerator\"\n             value={props.numeVal}\n             onChange={props.handleChangeNume} />\n            <input \n            id=\"denumerator\"\n             value={props.denuVal}\n             onChange={props.handleChangeDenu}/>\n          </div>\n        </form>\n\n        {/* input buttons */}\n        <div className=\"buttons\">\n         <ul className=\"inputButtons\">\n            <li onClick={props.onAdd}\n              className=\"btn\">+</li>\n            <li className=\"btn\" \n              onClick={props.onSubtract}>-</li>\n            <li className=\"btn\" \n              onClick={props.onEqual}>=</li>\n          <li className=\"btn\" \n              onClick={props.onClear}>AC</li>\n          </ul>\n          <ul className=\"ftIn\"onClick={props.handleInputChange}>\n          <li className =\"inputVal btn\"  id=\"ft\"\n       >ft</li>\n        <li className =\"inputVal btn\" id=\"in\"\n       >in</li>\n       <li className=\"inputVal btn\" id=\"nume\">Nume</li>\n       <li className=\"inputVal btn\" id=\"denu\">Denu</li>\n       \n          </ul>\n       \n        </div>\n         \n       <NumberButton\n        handleClick={props.handleClick} \n        handleInputChange={props.handleInputChange}/>\n      </div>\n    )\n  \n}\n\n\nexport default Input\n","import React, { Component } from 'react'\n\nexport class Header extends Component {\n  render() {\n    return (\n      <div className=\"Header\"style={HeaderStyle}>\n        <h1>React Construction Calculator</h1>\n      </div>\n    )\n  }\n}\nconst HeaderStyle={\n  background:'#0984E3',\n  color: 'white'\n}\nexport default Header\n","import React, {Component} from 'react';\nimport Viewport from './components/viewport'\nimport './App.css';\nimport Input from './components/input'\nimport Header from './components/Header'\n\n\n\nconst calc ={\n  footArray: [],\n  inchArray: [],\n  minusInchArray: [],\n  minusFootArray:[],\n  footInchArray:[],\n  minusFootInchArray:[],\n  totalInchArray:[],\n  minusTotalInchArray:[],\n  answer: '',\n  numeArray:[],\n  minusNumeArray: [],\n  inputValType: '',\n  footInputArray: [],\n  inchInputArray:[],\n  numeInputArray: [],\n  denuInputArray: []\n}\nconst calculations= {\n  subtractNumes(posNume, negNume){\n    if(posNume>negNume){\n      let nume = posNume - negNume;\n      return nume;\n    }else if(negNume>posNume){\n      let nume= posNume-negNume + 16;\n      return nume;\n    }else{\n      let nume=0;\n      return nume\n    }\n  },\n  addFeet(arr){\n    if(arr.length > 1){\n      return arr.reduce((a,b) => a+b)\n    }else if(arr.length ===1){\n      return arr[0]\n    }else{\n      return 0\n    }\n    \n  },\n  addInches(arr){\n    if(arr.length > 1){\n      return arr.reduce((a,b) => a+b)\n    }else if(arr.length ===1){\n      return arr[0]\n    }else{\n      return 0\n    }\n  },\n  feetToInches(feet){\n    let inches = feet*12;\n    return inches;\n  },\n  inchesToFeet(inches){\n    let feet= Math.floor(inches/12);\n    let inch= inches%12;\n    let footInchObj={\n      feet: feet,\n      inches: inch\n    }\n    return footInchObj;\n  },\n\n  addFeetToInches(ft, inch){\n    let totalInch = ft *12 + inch;\n    let totalFeet= Math.floor(totalInch/12);\n    let inchesLeft= totalInch%12;\n    let footInchObj={\n      ft: totalFeet, inches: inchesLeft\n    }\n    return footInchObj\n  },\n  //makes every fraction something over 16\n  getNume(nume, denu){\n    let multiplyer= 16/ denu;\n    let numerator= nume*multiplyer;\n    return numerator;\n  },\n  //Takes an array of numerators\n  fractionToMixed(arr){\n    if(arr.length >1){\n      let total= arr.reduce((a,b)=> a+b);\n      let inches= Math.floor(total/16);\n      let numerator= total%16;\n      const mixedObj={\n        inches: inches, nume: numerator\n      }\n      return mixedObj\n    }else if(arr.length ===1){\n      const mixedObj={\n        inches: 0, nume: arr[0]\n      }\n      return mixedObj\n    }else{\n      const mixedObj={\n        inches: 0, nume: 0\n      }\n      return mixedObj\n    }\n  \n  }\n  \n\n}\nconst makeAnswer = (x,y, z)=>{\n  let answer =''\n  if(z > 0){\n     answer = `${x}ft - ${y}in ${z}/16`;\n    calc.answer = answer;\n  }else{\n   answer= `${x}ft - ${y}in`;\n    calc.answer = answer;\n  }\n\nreturn answer\n}\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    \n    this.state={\n      footInputVal: '',\n      inchInputVal: '',\n      data: '',\n      stateAnswer: '',\n      numeInputVal: '',\n      denuInputVal: '',\n      fraction: '',\n      numberInputType: 'ft',\n  \n     };\n    this.handleChangeFeet = this.handleChangeFeet.bind(this);\n    this.handleChangeInches= this.handleChangeInches.bind(this);\n    this.onAdd = this.onAdd.bind(this);\n    this.onEqual= this.onEqual.bind(this);\n    this.onSubtract = this.onSubtract.bind(this);\n    this.handleChangeDenu = this.handleChangeDenu.bind(this);\n    this.handleChangeNume= this.handleChangeNume.bind(this);\n    this.handleClick= this.handleClick.bind(this);\n    this.handleInputChange= this.handleInputChange.bind(this);\n    this.handleClear = this.handleClear.bind(this);\n  }\n  //All Clear\n  handleClear(e){\n    this.setState({\n      footInputVal: '',\n      inchInputVal: '',\n      data: '',\n      stateAnswer: '',\n      numeInputVal: '',\n      denuInputVal: '',\n      fraction: '',\n      numberInputType: 'ft',\n    })\n    calc.footArray= [];\n  calc.inchArray= [];\n  calc.minusInchArray= [];\n  calc.minusFootArray=[];\n calc.totalInchArray=[];\n  calc.minusTotalInchArray=[];\n calc.answer= '';\n  calc.numeArray=[];\n  calc.minusNumeArray= [];\n  calc.inputValType= '';\n  calc.footInputArray= [];\n  calc.inchInputArray=[];\n  calc.footInchArray=[];\n  calc.footInchArray=[];\n  }\n  //function to control foot input field\n  handleChangeFeet(e){\n    let inputvalue = e.target.value;\n    this.setState({\n      footInputVal: inputvalue\n    })\n  }\n  //function to control the inch input field\n   handleChangeInches(e){\n     let inputvalue = e.target.value;\n    \n     this.setState({\n       inchInputVal: inputvalue\n     })\n    }\n    handleChangeNume(e){\n      let inputValue = e.target.value;\n      this.setState({\n        numeInputVal: inputValue\n      })\n     \n    }\n    handleChangeDenu(e){\n      let inputValue = e.target.value;\n      this.setState({\n        denuInputVal: inputValue\n      })\n    }\n    \n    \n    onEqual(e){\n    \n\n      //handle positive numbers\n    let mixedNumber= calculations.fractionToMixed(calc.numeArray);\n    if(mixedNumber.inches > 0){\n      calc.inchArray.push(mixedNumber.inches);\n    }\n    \n   \n    calc.inchArray.forEach(num => Number(num))\n    \n    \n     let totalFeet= calculations.addFeet(calc.footArray);\n      \n     let totalFeetInches= calculations.feetToInches(totalFeet);\n     \n     calc.inchArray.push(Number(totalFeetInches))\n\n     let totalInches= calculations.addInches(calc.inchArray);\n     \n    \n     //handle minus numbers\n     let minusMixedNumber= calculations.fractionToMixed(calc.minusNumeArray);\n     if(minusMixedNumber.inches> 0){\n      calc.minusInchArray.push(minusMixedNumber.inches);\n     }\n     \n\n     let minusTotalFeet= calculations.addFeet(calc.minusFootArray);\n\n     let minusTotalFeetInches= calculations.feetToInches(minusTotalFeet);\n\n     calc.minusInchArray.push(minusTotalFeetInches)\n      \n     let mixedNumberFinal = Number(mixedNumber.nume) - Number(minusMixedNumber.nume);\n    \n     let minusTotalInches= calculations.addInches(calc.minusInchArray);\n\n     if(mixedNumberFinal<0){\n       minusTotalInches++;\n       mixedNumberFinal+=16\n     }\n\n     let finalInches= totalInches - minusTotalInches;\n    \n     let footInchObj= calculations.inchesToFeet(finalInches);\n     console.log(typeof footInchObj.feet)\n     console.log(typeof footInchObj.inches)\n     console.log(typeof footInchObj.mixedNumberFinal)\n     if(mixedNumberFinal === undefined){\n       calc.answer= makeAnswer(footInchObj.feet, footInchObj.inches)\n     }else{\n      calc.answer= makeAnswer(footInchObj.feet, footInchObj.inches, mixedNumberFinal)\n     }\n\n    \n\n    this.setState({\n      footInputVal: '',\n      inchInputVal: '',\n      numeInputVal: '',\n      denuInputVal: '',\n      numberInputType: 'ft'\n    })\n    calc.footInputArray = [];\n    calc.inchInputArray = []\n  \n      \n    }\n\n    // *******Subtract Numbers ***********\n\n    onSubtract(e){\n    \n      const { footInputVal, inchInputVal, numeInputVal, denuInputVal } = this.state;\n\n      let footInchObj ={ \n        feet: footInputVal, \n        inches: inchInputVal,\n        nume: numeInputVal, \n        denu: denuInputVal};\n\n      let tempArray = []\n\n      tempArray.push(footInchObj)\n\n      calc.minusFootInchArray.push(footInchObj)\n      \n      let numeratorTotal= calculations.getNume(numeInputVal, denuInputVal);\n      \n      calc.minusNumeArray.push(Number(numeratorTotal));\n      calc.minusFootArray.push(Number(footInputVal));\n      calc.minusInchArray.push(Number(inchInputVal));\n      \n      this.setState({\n        footInputVal: '',\n        inchInputVal: '',\n        numeInputVal: '',\n        denuInputVal: '',\n        numberInputType: 'ft'\n      })\n      \n     \n      calc.footInputArray = []\n      calc.inchInputArray = []\n    }\n\n    // ******* Add Numbers ********** \n    onAdd(e){\n      \n     const { footInputVal, inchInputVal, numeInputVal, denuInputVal } = this.state;\n\n      let footInchObj ={ \n        feet: footInputVal, \n        inches: inchInputVal,\n        nume: numeInputVal, \n        denu: denuInputVal};\n\n      let tempArray = []\n\n      tempArray.push(footInchObj)\n\n      calc.footInchArray.push(footInchObj)\n      \n      let numeratorTotal= calculations.getNume(numeInputVal, denuInputVal);\n      \n      calc.numeArray.push(numeratorTotal);\n      calc.footArray.push(Number(footInputVal));\n      calc.inchArray.push(Number(inchInputVal));\n      \n      this.setState({\n        footInputVal: '',\n        inchInputVal: '',\n        numeInputVal: '',\n        denuInputVal: '',\n        numberInputType: 'ft'\n        \n      })\n      calc.footInputArray = [];\n      calc.inchInputArray = [];\n    }\n\n//Click event to change input type on the touchpad from foot => inch => fraction\n\n    handleInputChange(e){\n     \n      let input = e.target;\n      if(input.className.includes('inputVal')){\n        \n        const inputType= input.id;\n        \n        this.setState({\n          numberInputType : inputType,\n        })\n        \n      }\n     \n    }\n   //Use the onscreen keypad to enter values into the input fields\n\n    handleClick(e){\n      const { numberInputType } = this.state;\n      const { footInputArray, inchInputArray, numeInputArray, denuInputArray } = calc\n      let input= e.target;\n      \n      if(e.target.className.includes('number')){\n        \n        if(numberInputType === 'ft' || numberInputType=== 'feet'){\n         footInputArray.push(String(input.value)) \n         let footInputString= footInputArray.join('')\n         let inputNum= Number(footInputString)\n        \n         this.setState({\n           footInputVal: inputNum\n         })\n        }else if(numberInputType ===\"in\" || numberInputType === 'inches'){\n          inchInputArray.push(String(input.value));\n          let inchInputString= inchInputArray.join('');\n          let inputNum = Number(inchInputString)\n          \n          this.setState({\n            inchInputVal: inputNum\n          })\n        }else if(numberInputType ===\"nume\" || numberInputType === 'numerator'){\n          numeInputArray.push(String(input.value));\n          let numeInputString= numeInputArray.join('');\n          let inputNum = Number(numeInputString)\n          \n          this.setState({\n            numeInputVal: inputNum\n          })\n        }else if(numberInputType ===\"denu\" || numberInputType === 'denumerator'){\n          denuInputArray.push(String(input.value));\n          let denuInputString= denuInputArray.join('');\n          let inputNum = Number(denuInputString)\n          \n          this.setState({\n            denuInputVal: inputNum\n          })\n        }\n      }\n    }\n   \n  render(){\n    \n    \n  return (\n    <div className=\"bodydiv\">\n    <div className=\"container\">\n  \n      <Header />\n      <Viewport outputArray={calc.footInchArray}\n        minusOutputArray={calc.minusFootInchArray}\n        answer = {calc.answer} />\n      <Input\n        onClear={this.handleClear}\n        handleInputChange={this.handleInputChange}\n        inchVal={this.state.inchInputVal} \n        handleClick={this.handleClick}\n        footVal={this.state.footInputVal}\n        handleFeet={this.handleChangeFeet} \n        handleInches={this.handleChangeInches} \n        handleChangeDenu={this.handleChangeDenu}\n        handleChangeNume={this.handleChangeNume}\n        onAdd={this.onAdd} \n        numeVal={this.state.numeInputVal}\n        denuVal={this.state.denuInputVal}\n        onEqual={this.onEqual}  \n        onSubtract={this.onSubtract}/>\n       \n      \n    \n    </div>\n    </div>\n  );}\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}